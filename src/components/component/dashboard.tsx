"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/oOeNYrW7W4z
 */
import {
  CardDescription,
  CardHeader,
  CardContent,
  Card,
} from "@/components/ui/card";
import { ResponsivePie } from "@nivo/pie";
import { JSX, ClassAttributes, HTMLAttributes } from "react";
import { ResponsiveBar } from "@nivo/bar";

export default function dashboard() {
  return (
    // <main className="flex flex-col gap-6 p-6">
    <main>
      {/* <div className="flex items-center gap-4">
        <h1 className="font-semibold text-2xl">Wine Dashboard</h1>
      </div> */}
      {/* <div className="grid lg:grid-cols-2 gap-6"> */}
      {/* <Card className="flex flex-col"> */}
      <Card>
        <CardHeader>
          <CardDescription>Wine Distribution by Country</CardDescription>
        </CardHeader>
        <CardContent>
          {/* <PieChart className="w-full aspect-[4/3]" /> */}
        </CardContent>
      </Card>
      <Card className="flex flex-col">
        <CardHeader>
          <CardDescription>Wines by Vintage</CardDescription>
        </CardHeader>
        <CardContent>
          <GroupedbarChart className="w-full aspect-[4/3]" />
        </CardContent>
      </Card>
      {/* </div> */}
    </main>
  );
}

function PieChart(
  props: JSX.IntrinsicAttributes &
    ClassAttributes<HTMLDivElement> &
    HTMLAttributes<HTMLDivElement>
) {
  return (
    <div {...props}>
      <ResponsivePie
        data={[
          {
            id: "A",
            value: 634,
          },
          {
            id: "B",
            value: 456,
          },
          {
            id: "C",
            value: 150,
          },
          {
            id: "D",
            value: 258,
          },
          {
            id: "E",
            value: 511,
          },
        ]}
        sortByValue
        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}
        cornerRadius={0}
        activeOuterRadiusOffset={2}
        borderWidth={1}
        borderColor={{
          from: "color",
          modifiers: [["darker", 0.2]],
        }}
        arcLabel="id"
        arcLabelsRadiusOffset={0.6}
        arcLabelsTextColor={{
          from: "color",
          modifiers: [["darker", 2]],
        }}
        enableArcLinkLabels={false}
        colors={{ scheme: "paired" }}
        legends={[
          {
            anchor: "bottom",
            direction: "row",
            justify: false,
            translateX: 0,
            translateY: 56,
            itemsSpacing: 0,
            itemWidth: 50,
            itemHeight: 18,
            itemDirection: "left-to-right",
            symbolSize: 18,
            symbolShape: "circle",
          },
        ]}
        theme={{
          tooltip: {
            container: {
              fontSize: "12px",
            },
          },
        }}
        role="application"
      />
    </div>
  );
}

function GroupedbarChart(
  props: JSX.IntrinsicAttributes &
    ClassAttributes<HTMLDivElement> &
    HTMLAttributes<HTMLDivElement>
) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          {
            name: "A",
            foo: 111,
            bar: 99,
            baz: 100,
          },
          {
            name: "B",
            foo: 157,
            bar: 87,
            baz: 167,
          },
          {
            name: "C",
            foo: 129,
            bar: 9,
            baz: 110,
          },
          {
            name: "D",
            foo: 187,
            bar: 151,
            baz: 106,
          },
          {
            name: "E",
            foo: 119,
            bar: 127,
            baz: 115,
          },
          {
            name: "F",
            foo: 0,
            bar: 121,
            baz: 185,
          },
          {
            name: "G",
            foo: 101,
            bar: 55,
            baz: 55,
          },
        ]}
        keys={["foo", "bar", "baz"]}
        indexBy="name"
        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}
        padding={0.3}
        groupMode="grouped"
        valueScale={{ type: "linear" }}
        indexScale={{ type: "band", round: true }}
        colors={{ scheme: "paired" }}
        borderWidth={1}
        borderColor={{
          from: "color",
          modifiers: [["darker", 0.2]],
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 5,
          tickPadding: 5,
          tickRotation: 0,
          legend: "Name",
          legendPosition: "middle",
          legendOffset: 45,
          truncateTickAt: 0,
        }}
        axisLeft={{
          tickSize: 5,
          tickPadding: 5,
          tickRotation: 0,
          legend: "Number",
          legendPosition: "middle",
          legendOffset: -45,
          truncateTickAt: 0,
        }}
        labelSkipWidth={12}
        labelSkipHeight={12}
        legends={[
          {
            dataFrom: "keys",
            anchor: "bottom-right",
            direction: "column",
            justify: false,
            translateX: 120,
            translateY: 0,
            itemsSpacing: 2,
            itemWidth: 100,
            itemHeight: 20,
            itemDirection: "left-to-right",
            symbolSize: 18,
          },
        ]}
        theme={{
          tooltip: {
            container: {
              fontSize: "12px",
            },
          },
        }}
        role="application"
        ariaLabel="A grouped bar chart"
      />
    </div>
  );
}
